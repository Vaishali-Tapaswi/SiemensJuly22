Lab 4 - Http Server -> index page with page1 and page2 as hlinks
        package main

        import (
                "fmt"
                "io"
                "log"
                "net/http"
        )
       func main() {
                indexPageHandler := func(w http.ResponseWriter, req *http.Request) {
                        io.WriteString(w, "<h1>Index Page</h1>")
                }
                page1Handler := func(w http.ResponseWriter, req *http.Request) {
                        io.WriteString(w, "<h1>Page One</h1>")
                }
                http.HandleFunc("/", indexPageHandler)
                http.HandleFunc("/page1", page1Handler)
                fmt.Println("Sever starting on port 8080.....")
                log.Fatal(http.ListenAndServe(":8080", nil))
        }

Lab 3 - 
        package main

        import(
                "fmt"
                "net/http"
                "io/ioutil"
        )

        func main(){
                //func (c *Client) Get(url string) (resp *Response, err error)
                client := http.Client{}
                resp, err := client.Get("https://reqres.in/api/users/2")
                fmt.Println("resp = ", resp)
                fmt.Println("err  =  ", err)
                fmt.Println("RespBody ", resp.Body)
                content, err := ioutil.ReadAll(resp.Body)
                fmt.Println("Content = ", string(content))
                fmt.Println("err  =  ", err)
         }
        
Lab 2- Create an interface Plot with method Display
        Create two structures Point2d(x,y) and Point3d(x,y,z)
        Implement Plot for both Point2d and Point3d so that we can invoke Display method for both the structures
        Display method should just have print statement with co-ordinates

Lab 1 - Interface
    package main

    import "fmt"
    import "strconv"

    type Emp struct {
      empno int
      ename string
    }
    func (e Emp) Convert() string {
      str :="Emp Details[Empno = "+ strconv.Itoa(e.empno)+ " , Name = " + e.ename +"]" ;
      return str
    }

    type Tostr interface {
      Convert() string 
    }


    func main(){
      var a Tostr;
      e:= Emp{10,"aaa"}
      a = e
      fmt.Println(e.Convert())
      fmt.Println(a.Convert())
    }


